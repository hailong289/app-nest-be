steps:
  # Build Auth service
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'asia-southeast1-docker.pkg.dev/app-chat-2b616/microservices/auth:latest',
        '-f',
        'apps/auth/Dockerfile',
        '.'
      ]

  # Push Auth service image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'asia-southeast1-docker.pkg.dev/app-chat-2b616/microservices/auth:latest']

  # Deploy Auth service to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'  
    entrypoint: gcloud
    args:
      [
        'run',
        'deploy',
        'auth-service',
        '--image',
        'asia-southeast1-docker.pkg.dev/app-chat-2b616/microservices/auth:latest',
        '--region',
        'asia-southeast1',
        '--platform',
        'managed',
        '--allow-unauthenticated',
        '--cpu=1',
        '--memory=256Mi',
        '--use-http2',
        '--set-env-vars',
        'NODE_ENV=production',
        '--set-env-vars',
        'HOST=0.0.0.0',
        '--set-env-vars',
        'PROTO_PATH=libs/grpc/auth.proto',
        '--set-env-vars',
        'DB_CONNECTION=mongodb',
        '--set-env-vars',
        'DB_HOST=localhost',
        '--set-env-vars',
        'DB_NAME=AppChat',
        '--set-env-vars',
        'DB_USER=mongo',
        '--set-env-vars',
        'DB_PASSWORD=000000',
        '--set-env-vars',
        'JWT_ACCESS_SECRET=123',
        '--set-env-vars',
        'JWT_REFRESH_SECRET=123'
      ]

images:
  - 'asia-southeast1-docker.pkg.dev/app-chat-2b616/microservices/auth:latest'
