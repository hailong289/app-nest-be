name: Deploy Api Gateway Service

on:
  push:
    branches:
      - developer

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'service/api-gateway')

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: app-chat-2b616
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker
        run: gcloud api-gateway configure-docker asia-southeast1-docker.pkg.dev --quiet

      - name: Build & Push Docker image
        run: |
          IMAGE="asia-southeast1-docker.pkg.dev/app-chat-2b616/microservices/api-gateway:latest"
          docker build -t $IMAGE -f apps/api-gateway/Dockerfile .
          docker push $IMAGE

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy api-gateway-service \
            --image asia-southeast1-docker.pkg.dev/app-chat-2b616/microservices/api-gateway:latest \
            --region asia-southeast1 \
            --platform managed \
            --allow-unauthenticated \
            --min-instances=0 \
            --max-instances=3 \
            --cpu=1 \
            --memory=256Mi \
            --use-http2 \
            --set-env-vars NODE_ENV=production \
            --set-env-vars HOST=${{ secrets.GATEWAY_HOST }} \
            --set-env-vars GATEWAY_AUTH_HOST=${{ secrets.GATEWAY_AUTH_HOST }} \
            --set-env-vars GATEWAY_AUTH_DB_CONNECTION=${{ secrets.GATEWAY_AUTH_PORT }} \
            --set-env-vars GATEWAY_AUTH_PROTO_PATH=${{ secrets.GATEWAY_AUTH_PROTO_PATH }} \
            --set-env-vars GATEWAY_AUTH_JWT_ACCESS_SECRET=${{ secrets.GATEWAY_AUTH_JWT_ACCESS_SECRET }} \
            --set-env-vars GATEWAY_AUTH_JWT_REFRESH_SECRET=${{ secrets.GATEWAY_AUTH_JWT_REFRESH_SECRET }}
